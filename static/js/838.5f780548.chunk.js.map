{"version":3,"file":"static/js/838.5f780548.chunk.js","mappings":"8LAEaA,E,OAAUC,GAAAA,IAAH,6D,SCCPC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,MAAM,UACNC,MAAM,MACNC,SAAS,EACTC,UAAU,2BAIjB,C,yICZYC,EAAUN,EAAAA,GAAAA,QAAH,8CAIPO,EAAQP,EAAAA,GAAAA,GAAH,+GAOLQ,EAAYR,EAAAA,GAAAA,GAAH,gG,GAMGA,EAAAA,GAAAA,GAAH,oHASGA,EAAAA,GAAAA,EAAH,gD,OC1BTS,EAAYT,EAAAA,GAAAA,GAAH,0I,SCETU,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,OACE,8BACGA,EAASC,KAAI,SAAAC,GAAK,OACjB,SAAC,EAAD,WACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAME,IAA1B,SAAiCF,EAAMG,SADzBH,EAAME,GADL,KAOxB,ECuBD,EA/Ba,WACX,OAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAON,EAAP,KAAiBO,EAAjB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJR,EAAYQ,EACb,IACAC,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAMO,QAAnB,IACXC,SAAQ,WACPT,GAAa,EACd,GACJ,GAAE,KAGD,gCACGC,IAAS,6CAAqBA,MAC/B,UAACf,EAAD,YACE,SAACC,EAAD,8BACA,SAACC,EAAD,UACGG,IAAY,SAACD,EAAD,CAAcC,SAAUA,SAGxCQ,IAAa,SAAClB,EAAA,EAAD,MAGnB,C,8LCjCD6B,EAAAA,EAAAA,QAAAA,QAAwB,+BACxB,IAAMC,EAAU,mCAEHP,EAAc,mCAAG,oGACLM,EAAAA,EAAAA,IAAA,mEACuCC,IAFlC,cACtBL,EADsB,yBAKrBA,EAASM,KAAKC,SALO,2CAAH,qDAQdC,EAAc,mCAAG,WAAOC,GAAP,uFACLL,EAAAA,EAAAA,IAAA,0DAC8BK,EAD9B,oBAC+CJ,IAF1C,cACtBL,EADsB,yBAKrBA,EAASM,KAAKC,SALO,2CAAH,sDAQdG,EAAmB,mCAAG,WAAOrB,GAAP,uFACVe,EAAAA,EAAAA,IAAA,6CACiBf,EADjB,oBAC+BgB,IAFrB,cAC3BL,EAD2B,yBAI1BA,EAASM,MAJiB,2CAAH,sDAOnBK,EAAe,mCAAG,WAAOtB,GAAP,uFACNe,EAAAA,EAAAA,IAAA,6CACiBf,EADjB,4BACuCgB,IAFjC,cACvBL,EADuB,yBAKtBA,EAASM,KAAKM,MALQ,2CAAH,sDAQfC,EAAe,mCAAG,WAAOxB,GAAP,uFACNe,EAAAA,EAAAA,IAAA,6CACiBf,EADjB,4BACuCgB,IAFjC,cACvBL,EADuB,yBAKtBA,EAASM,KAAKC,SALQ,2CAAH,qD","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Home/Home.styled.js","components/TrendingItem/TrendingItem.styled.js","components/TrendingItem/TrendingItem.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  position: relative;\n  top: 10vh;\n`;","import { FallingLines } from 'react-loader-spinner';\nimport { Loading } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Loading>\n      <FallingLines\n        color=\"#966844\"\n        width=\"100\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n    </Loading>\n  );\n};","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin: 20px 20px;\n`;\n\nexport const Title = styled.h2`\n  margin-left: 45px;\n  margin-bottom: 20px;\n  font-weight: 700;\n  font-size: 28px;\n`;\n\nexport const FilmsList = styled.ul`\n  margin-left: 50px;\n  margin-bottom: 15px;\n  list-style-type: disc;\n`;\n\nexport const FilmsItem = styled.li`\n  margin-bottom: 5px;\n  font-size: 20px;\n  :hover,\n  :focus {\n    color: #966844;\n  }\n`;\n\nexport const Paragraph = styled.p`\n  margin-bottom: 20px;\n`;","import styled from 'styled-components';\n\nexport const FilmsItem = styled.li`\n  margin-bottom: 10px;\n  font-weight: 600;\n  font-size: 18px;\n  :hover,\n  :focus {\n    color: #966844;\n  }\n`;","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FilmsItem } from './TrendingItem.styled';\n\nexport const TrendingItem = ({ trending }) => {\n  return (\n    <>\n      {trending.map(movie => (\n        <FilmsItem key={movie.id}>\n          <Link to={`movies/${movie.id}`}>{movie.title}</Link>\n        </FilmsItem>\n      ))}\n    </>\n  );\n};\n\nTrendingItem.propTypes = {\n  trending: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};","import { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { getTrendingApi } from 'services/api';\nimport { Section, Title, FilmsList } from './Home.styled';\nimport { TrendingItem } from 'components/TrendingItem/TrendingItem';\n\nconst Home = () => {\n  const [trending, setTrending] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTrendingApi()\n      .then(response => {\n        setTrending(response);\n      })\n      .catch(error => setError(error.message))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      {error && <p>Oops, some error:{error}</p>}\n      <Section>\n        <Title>Trending today</Title>\n        <FilmsList>\n          {trending && <TrendingItem trending={trending} />}\n        </FilmsList>\n      </Section>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\n\naxios.default.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '69096c6df3db45b0788fb44bda629200';\n\nexport const getTrendingApi = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`\n  );\n  \n  return response.data.results;\n};\n\nexport const getMovieSearch = async (query) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieDetailsById = async (id) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async (id) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  \n  return response.data.cast;\n};\n\nexport const getMovieReviews = async (id) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n};"],"names":["Loading","styled","Loader","color","width","visible","ariaLabel","Section","Title","FilmsList","FilmsItem","TrendingItem","trending","map","movie","to","id","title","useState","setTrending","isLoading","setIsLoading","error","setError","useEffect","getTrendingApi","then","response","catch","message","finally","axios","API_KEY","data","results","getMovieSearch","query","getMovieDetailsById","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}