{"version":3,"file":"static/js/807.19541e7f.chunk.js","mappings":"8LAEaA,E,OAAUC,GAAAA,IAAH,6D,SCCPC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,MAAM,UACNC,MAAM,MACNC,SAAS,EACTC,UAAU,2BAIjB,C,6JCZYC,EAAe,mCAAG,WAAMC,GAAN,gFACvBC,EAAS,CACbC,IAAI,UAAD,OAAYF,EAAZ,YACHG,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCALgB,UASNC,EAAAA,EAAAA,GAAML,GATA,cASvBM,EATuB,yBAUtBA,EAASC,KAAKC,SAVQ,2CAAH,sD,kBCAfC,EAAejB,EAAAA,GAAAA,GAAH,6FAMZkB,EAAUlB,EAAAA,GAAAA,GAAH,gGAMPmB,EAAcnB,EAAAA,GAAAA,GAAH,mEAKXoB,EAASpB,EAAAA,GAAAA,EAAH,qEAKNqB,EAAUrB,EAAAA,GAAAA,EAAH,gDAIPsB,EAAetB,EAAAA,GAAAA,EAAH,sF,SCjBZuB,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,iCACE,SAACP,EAAD,uBACA,SAACC,EAAD,UACsB,IAAnBM,EAAQC,QACP,SAACH,EAAD,8DAIAE,EAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,UAACV,EAAD,YACE,UAACC,EAAD,sBAAiBQ,MACjB,SAACP,EAAD,UAAUQ,MAFMF,EAKrB,QAKV,EC/BYG,EAAU9B,EAAAA,GAAAA,QAAH,2ECmCpB,EA9BiB,WACf,OAAmC+B,EAAAA,EAAAA,UAAS,IAA5C,eAAOP,EAAP,KAAgBQ,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEQ7B,GAAY8B,EAAAA,EAAAA,MAAZ9B,QAcR,OAZA+B,EAAAA,EAAAA,YAAU,WACRJ,GAAa,GACb5B,EAAgBC,GACbgC,MAAK,SAAAzB,GACJkB,EAAgBlB,EACjB,IACA0B,OAAM,SAAAL,GAAK,OAAIC,EAASD,EAAMM,QAAnB,IACXC,SAAQ,WACPR,GAAa,EACd,GACJ,GAAE,CAAC3B,KAGF,gCACG0B,IAAa,SAAChC,EAAA,EAAD,IACbkC,IAAS,6CAAqBA,MAC/B,SAACL,EAAD,WACE,SAACP,EAAD,CAAaC,QAASA,QAI7B,C","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","services/getMovieReviews.js","components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","pages/Reviews/Reviews.styled.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  position: relative;\n  top: 10vh;\n`;","import { FallingLines } from 'react-loader-spinner';\nimport { Loading } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Loading>\n      <FallingLines\n        color=\"#966844\"\n        width=\"100\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n    </Loading>\n  );\n};","import axios from 'axios';\n\nexport const getMovieReviews = async movieId => {\n  const config = {\n    url: `/movie/${movieId}/reviews`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '69096c6df3db45b0788fb44bda629200',\n    },\n  };\n\n  const response = await axios(config);\n  return response.data.results;\n};","import styled from 'styled-components';\n\nexport const ReviewsTitle = styled.h3`\n  text-align: center;\n  margin-left: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const Reviews = styled.ul`\n  margin-left: 50px;\n  margin-bottom: 15px;\n  list-style-type: disc;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin-bottom: 5px;\n  font-size: 18px;\n`;\n\nexport const Author = styled.p`\n  margin-bottom: 20px;\n  font-weight: 600;\n`;\n\nexport const Content = styled.p`\n  margin-bottom: 30px;\n`;\n\nexport const EmptyReviews = styled.p`\nmargin-bottom: 30px;\ntext-align: center;\nfont-weight: 500;\n`;","import PropTypes from 'prop-types';\n\nimport {\n  ReviewsTitle,\n  Reviews,\n  EmptyReviews,\n  ReviewsItem,\n  Author,\n  Content,\n} from './ReviewsList.styled';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <>\n      <ReviewsTitle>Reviews</ReviewsTitle>\n      <Reviews>\n        {reviews.length === 0 ? (\n          <EmptyReviews>\n            Oops! We don't have any reviews for this movie.\n          </EmptyReviews>\n        ) : (\n          reviews.map(({ id, author, content }) => {\n            return (\n              <ReviewsItem key={id}>\n                <Author>Author: {author}</Author>\n                <Content>{content}</Content>\n              </ReviewsItem>\n            );\n          })\n        )}\n      </Reviews>\n    </>\n  );\n};\n\nReviewsList.propTypes={\n  reviews:PropTypes.arrayOf(PropTypes.shape())\n}","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin: 20px 20px;\n  border-bottom: 2px solid;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { getMovieReviews } from 'services/getMovieReviews';\nimport { ReviewsList } from 'components/ReviewsList/ReviewsList';\nimport { Section } from './Reviews.styled';\n\n const Reviews = () => {\n  const [reviews, setMovieReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieReviews(movieId)\n      .then(response => {\n        setMovieReviews(response);\n      })\n      .catch(error => setError(error.message))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Oops, some error:{error}</p>}\n      <Section>\n        <ReviewsList reviews={reviews} />\n      </Section>\n    </>\n  );\n};\n\nexport default Reviews;"],"names":["Loading","styled","Loader","color","width","visible","ariaLabel","getMovieReviews","movieId","config","url","baseURL","params","api_key","axios","response","data","results","ReviewsTitle","Reviews","ReviewsItem","Author","Content","EmptyReviews","ReviewsList","reviews","length","map","id","author","content","Section","useState","setMovieReviews","isLoading","setIsLoading","error","setError","useParams","useEffect","then","catch","message","finally"],"sourceRoot":""}